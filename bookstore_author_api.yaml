openapi: 3.0.0
info:
  title: Bookstore API - Authors
  version: 1.0.0
  description: API for managing authors in an online bookstore.

paths:
  /authors:
    get:
      summary: Get a list of authors
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
            default: 1
          description: The page number to retrieve. Defaults to 1 if not specified.
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 25
          description: The number of items per page. Defaults to 25 if not specified.
      responses:
        '200':
          description: A JSON array of authors
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                    description: Total number of authors available.
                  totalPages:
                    type: integer
                    description: Total number of pages.
                  currentPage:
                    type: integer
                    description: The current page number.
                  pageSize:
                    type: integer
                    description: The number of items per page.
                  authors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Author'
    post:
      summary: Add a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author created successfully

  /authors/{id}:
    get:
      summary: Get a specific author by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
        '404':
          description: Author not found

    patch:
      summary: Update an author by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author updated successfully
        '404':
          description: Author not found

    delete:
      summary: Delete an author by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Author deleted successfully
        '404':
          description: Author not found

components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: object
          properties:
            first_name:
              type: string
            middle_name:
              type: string
            last_name:
              type: string
        dob:
          type: string
          format: date
        address:
          type: object
          properties:
            unit:
              type: string
            street_name:
              type: string
            city:
              type: string
            state:
              type: string
            country:
              type: string
            zipcode:
              type: string
            landmark:
              type: string
        languages:
          type: array
          items:
            type: string
      required:
        - id
        - name
        - dob
        - address
        - languages
