// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Bookstore API
 *
 * API for managing books in an online bookstore.
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// BooksGet - Get a list of all books
func (s *DefaultAPIService) BooksGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update BooksGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Book{}) or use other options such as http.Ok ...
	// return Response(200, []Book{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BooksGet method not implemented")
}

// BooksIsbnDelete - Delete a book by ISBN
func (s *DefaultAPIService) BooksIsbnDelete(ctx context.Context, isbn string) (ImplResponse, error) {
	// TODO - update BooksIsbnDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BooksIsbnDelete method not implemented")
}

// BooksIsbnGet - Get a specific book by ISBN
func (s *DefaultAPIService) BooksIsbnGet(ctx context.Context, isbn string) (ImplResponse, error) {
	// TODO - update BooksIsbnGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Book{}) or use other options such as http.Ok ...
	// return Response(200, Book{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BooksIsbnGet method not implemented")
}

// BooksIsbnPatch - Update a book by ISBN
func (s *DefaultAPIService) BooksIsbnPatch(ctx context.Context, isbn string, book Book) (ImplResponse, error) {
	// TODO - update BooksIsbnPatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BooksIsbnPatch method not implemented")
}

// BooksPost - Add a new book
func (s *DefaultAPIService) BooksPost(ctx context.Context, book Book) (ImplResponse, error) {
	// TODO - update BooksPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("BooksPost method not implemented")
}
